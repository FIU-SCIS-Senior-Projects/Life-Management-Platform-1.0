@model LifeManagement.Models.UserProfileViewModel


@using (Html.BeginForm("UserEditProfile", "Users",FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div id=" responseOK">

    </div>
    <div class="form-horizontal" id="completeForm">
        <h4 class="text-center">Edit Profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <h5 style="text-align:center; color:red ;font-weight:bold"> @ViewBag.DuplicateEmail</h5>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vision, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Vision, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LifeSuccess, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LifeSuccess, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LifeSuccess, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Statement1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Statement1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Statement1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Statement2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Statement2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Statement2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Statement3, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Statement3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Statement3, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--
        <div class="form-group">
            <h5 id="noFile" class="col-md-offset-4 text-danger"></h5>
            <div class="control-label col-md-4">
                <label style="text-align:left">Upload a profile picture:</label>
            </div>
            <div class="col-md-8">
                <input type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>
        -->
        <div class="form-group">
            <h5 id="noFile" class="col-md-offset-4 text-danger"></h5>
            <div class="control-label col-md-4">
                <label style="text-align:left">Upload a profile picture:</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Files, new { type = "file", name = "Files"})<br /><br />
            </div>
        </div>


            <br />
            <div class="form-group">
                <div class="col-md-offset-4">
                    <div class="col-md-4">
                      <!--  <button onclick="validate()" class="btn btn-success form-control">Save</button>-->
                        <input type="submit" value="Save" class="btn btn-success form-control" />

                    </div>
                    <div class="col-md-4">
                        <a href="@Url.Action("Dashboard", "Users")" class="btn btn-primary form-control">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
}


